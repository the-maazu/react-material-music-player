{"version":3,"sources":["logo.svg","module/components/CoverArt.js","module/components/ScrollingText.js","module/components/TrackDetials.js","module/utils/secondsToString.js","module/components/ProgressBar.js","module/utils/withoutPropagation.js","module/components/Controls.js","module/components/VolumeControl.js","module/components/PlaylistItemTemplate.js","module/components/PlaylistControl.js","module/redux/actionTypes.js","module/redux/actionCreators.js","module/components/Player.js","module/model/TrackModel.js","module/constants/EventTypes.js","module/interface.js","module/redux/reducers.js","module/redux/middleware/audioOutput.js","module/model/AudioOutput.js","module/redux/middleware/shuffler.js","module/utils/shuffle.js","module/redux/middleware/changeTrackHelper.js","module/redux/store.js","module/redux/middleware/events.js","module/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","height","args","size","width","overflow","CoverArt","props","src","classes","className","alt","ScrollingText","state","scrolling","rootRef","React","createRef","textRef","rootNode","this","current","textNode","clientWidth","scrollWidth","style","animationName","animationDuration","textContent","length","animationIterationCount","animationFillMode","setState","undefined","updateScrollingEffect","children","ref","textContainer","Typography","align","overflown","display","Component","withStyles","theme","whiteSpace","marginRight","spacing","TrackDetails","title","artist","showArtist","secondsToString","seconds","minutes","Math","floor","toString","mseconds","timeText","margin","slider","ProgressBar","timeLeft","currentTime","onSeek","progress","Grid","container","direction","justify","alignItems","wrap","item","Slider","value","onChange","event","newValue","withoutPropagation","callback","e","stopPropagation","Controls","isPlaying","onPlay","onPause","onSkipPrev","onSkipNext","disabled","IconButton","onClick","fontSize","VolumeControl","onVolumeChange","PlaylistItemTemplate","dragHandleProps","commonProps","justifyContent","onTrackSelect","listOfID","findIndex","ID","Boolean","currentTrackID","coverArt","xs","variant","maxHeight","border","palette","divider","borderRadius","shape","padding","nowPlayingIconContainer","position","top","left","isDesktop","bottom","draggablelistContainer","buttonGroup","button","PlaylistControl","list","isShuffled","currentTrackIndex","onReorder","onShuffle","useState","values","setValues","expanded","expand","anchorEl","setAnchor","draggablelistContainerRef","reactDraggableList","Paper","elevation","itemKey","template","onMoveEnd","newList","track","map","element","Popover","open","onClose","newValues","filter","console","log","anchorOrigin","vertical","horizontal","transformOrigin","Collapse","collapsedHeight","in","ToggleButtonGroup","find","target","parentElement","ToggleButton","actionTypes","CHANGE_TRACK","PLAY","PAUSE","STOP","SHUFFLE","UPDATE_PLAYLIST","CHANGE_VOLUME","SET_START_TIME","SET_STOP_TIME","SET_CURRENT_TIME","SET_TIME_LEFT","MAXIMISE","MINIMISE","SEEK","actionCreators","changeTrack","index","type","payload","play","pause","updatePlaylist","playlist","volumeChange","level","VOLUME_CHANGE","shuffle","bool","maximise","minimise","setCurrentTime","setTimeLeft","seek","time","changeVolume","volume","MAXHEIGHT","MINHEIGHT","paper","dropDownButton","order","transform","trackDetails","progressBar","control","volumeControl","playlistControl","connect","dispatch","onChangeTrack","currentTrack","onMaximise","onMinimise","useTheme","useMediaQuery","mediaState","shuffled","maximised","paddingTop","ArrowForwardIos","Track","trackID","source","getSource","eventTypes","PLAYLATER","PLAYNEXT","interfaceObject","CustomEvent","EventTypes","detail","window","dispatchEvent","playNext","playLater","combineReducers","action","audioElement","TrackModel","Audio","audioOutput","store","addEventListener","isNaN","duration","getState","MediaStates","playing","currentIndex","next","newTrack","readyState","shuffler","upper","slice","lower","lenth","withoutCurrent","concat","array","newArray","i","ceil","randIndex1","round","random","randIndex2","temp","sort","first","second","changeTrackHelper","currentState","stopped","paused","createStore","rootReducer","applyMiddleware","playNextAfterHandler","currentPlaylist","newPlaylist","reduce","accumulator","currentValue","main","trackModel","PlayerInterface","playerInterface","TEST_MEDIA","setTimeout","App","logo","href","rel","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.72f7e0f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    root:{\n        height: args => args.size,\n        width: args => args.size,\n        overflow: 'hidden',\n\n        '& > img': {\n            height: '100%',\n            width: '100%'\n        }\n    }\n}))\n\nexport default function CoverArt(props){\n\n    const {\n        src,\n        size\n    } = props;\n\n    const classes = useStyles({size})\n\n    return (\n        <div className={classes.root}>\n            <img src={src} alt={\"cover art\"}/>\n        </div>\n    )\n}","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles} from '@material-ui/core/styles';\n\nimport PropTypes from 'prop-types';\n\nconst styles = (theme) => { return {\n    root: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden'\n    },\n    textContainer: {\n        '& p': {\n            marginRight: theme.spacing(),\n        }\n    }\n}}\n\nclass ScrollingText extends React.Component{\n\n    constructor(props){\n        super(props)\n\n        this.state = {scrolling: false}\n        this.props = props;\n\n        this.rootRef = React.createRef()\n        this.textRef = React.createRef()\n\n    }\n\n    updateScrollingEffect(rootRef, textRef){\n\n        const rootNode= this.rootRef.current;\n        const textNode = this.textRef.current;\n\n        if(rootNode.clientWidth < textNode.scrollWidth && !this.state.scrolling){\n\n            textNode.style.width=`${textNode.scrollWidth + 8}px`\n            textNode.style.animationName= 'slide-horizontal'\n            textNode.style.animationDuration= `${(textNode.textContent.length)/4}s`\n            textNode.style.animationIterationCount= 'infinite'\n            textNode.style.animationFillMode= 'forwards'\n\n            this.setState({scrolling: true})\n        }\n        else if(rootNode.clientWidth >= textNode.scrollWidth/2 && this.state.scrolling){\n\n            textNode.style.width='auto'\n            textNode.style.animationName= undefined\n            textNode.style.animationDuration= '0'\n            textNode.style.animationIterationCount= '1'\n            textNode.style.animationFillMode= undefined\n\n            this.setState({scrolling: false})\n        }\n    }\n\n    componentDidUpdate(){\n        this.updateScrollingEffect()\n    }\n\n    componentDidMount(){\n        this.updateScrollingEffect()\n    }\n\n    render(){\n\n        const {\n            children,\n            classes\n        } = this.props\n\n        return (\n            <div\n            className={classes.root}\n            ref={this.rootRef}>\n                <div \n                ref={this.textRef}\n                className={classes.textContainer}>\n                    <Typography\n                    align={this.state.overflown? 'left': 'center'}\n                    display='inline'\n                    >\n                        {children}\n                    </Typography>\n\n                    {this.state.scrolling?\n                    <Typography\n                    align={this.state.overflown? 'left': 'center'}\n                    display='inline'\n                    >\n                        {children}\n                    </Typography> : null\n                    }\n                </div>\n            </div>\n        )\n\n    }\n}\n\nScrollingText.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n  export default withStyles(styles)(ScrollingText);","import React from 'react'\n\n\nimport ScrollingText from './ScrollingText.js'\n\nexport default function TrackDetails(props){\n\n    const {\n        title,\n        artist,\n        showArtist\n    } = props;\n\n    return (\n        <div>\n            <ScrollingText>\n               {title}\n            </ScrollingText>\n\n            {showArtist ? \n            <ScrollingText >\n                {artist}\n            </ScrollingText> : null\n            }\n        </div>\n    )\n}","function secondsToString(seconds){\n\n    let minutes = Math.floor(seconds/60).toString()\n    let mseconds = Math.floor(seconds%60).toString()\n\n    return minutes + ':' + ( mseconds.length < 2 ? '0' : '' ) + mseconds\n}\n\nexport default secondsToString","import React from 'react'\n\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography'\n\nimport secondsToString from '../utils/secondsToString.js'\n\nconst useStyles = makeStyles(theme => ({\n    root:{\n        width: '100%',\n    },\n    timeText: {\n        margin: theme.spacing(1)\n    },\n    slider: {\n        width: '95%'\n    }\n  }));\n\nexport default function ProgressBar(props){\n\n    const classes = useStyles();\n\n    const {\n        timeLeft,\n        currentTime,\n        onSeek\n    } = props\n\n    const  progress= (currentTime/ (timeLeft + currentTime) ) * 100\n\n    const handleSliderChange = (event, newValue) => {\n        onSeek( (newValue/100) * (currentTime + timeLeft) )\n    };\n\n    return (\n        <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        wrap='nowrap'\n        className={classes.root}\n        >\n            <Grid item>\n                <Typography className={classes.timeText}>\n                    {secondsToString(currentTime)}\n                </Typography>\n            </Grid>\n            <Grid item className={classes.slider}>\n                <Slider \n                aria-labelledby=\"continuous-slider\" \n                value={progress}\n                onChange={handleSliderChange}/>\n            </Grid>\n            <Grid item>\n                <Typography className={classes.timeText}>\n                    {secondsToString(timeLeft)}\n                </Typography>\n            </Grid>\n        </Grid>\n    )\n}","\n// stop event from propagating\nfunction withoutPropagation(callback, ...args){\n    return (e) => {\n        e.stopPropagation()\n        callback(...args)\n    }\n}\n\nexport default withoutPropagation","import React from 'react';\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNextRounded\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPreviousRounded\";\nimport PlayIcon from \"@material-ui/icons/PlayArrowRounded\";\nimport PauseIcon from \"@material-ui/icons/PauseRounded\";\nimport { Grid } from '@material-ui/core';\n\nimport withoutPropagation from '../utils/withoutPropagation';\n\nexport default function Controls(props){\n\n    const {\n        isPlaying,\n        onPlay,\n        onPause,\n        onSkipPrev,\n        onSkipNext,\n        disabled\n    } = props\n\n    return (\n        <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        wrap='nowrap'\n        >\n            <Grid item>\n                <IconButton \n                onClick={withoutPropagation(onSkipPrev)}\n                disabled={disabled}>\n                    <SkipPreviousIcon fontSize=\"large\"/>\n                </IconButton>\n            </Grid>\n            <Grid item>\n                <IconButton \n                onClick={ withoutPropagation(isPlaying? onPause : onPlay )}\n                disabled={disabled}>\n                    { isPlaying ? \n                    <PauseIcon fontSize=\"large\"/>\n                    :\n                    <PlayIcon fontSize=\"large\"/>\n                    }\n                </IconButton>\n            </Grid>\n            <Grid item>\n                <IconButton \n                onClick={withoutPropagation(onSkipNext)}\n                disabled={disabled}>\n                    <SkipNextIcon fontSize=\"large\"/>\n                </IconButton>\n            </Grid>\n        </Grid>\n    )\n}\n\n","import React from 'react'\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\n\nimport withoutPropagation from '../utils/withoutPropagation';\n\nconst useStyles = makeStyles(theme => ({\n    root:{\n        width: '100%'\n    },\n    slider: {\n        width: '50%'\n    }\n  }));\n\nexport default function VolumeControl(props){\n\n    const classes = useStyles();\n\n    const {\n        value,\n        onVolumeChange\n    } = props\n\n    const handleSliderChange = (event, newValue) => {\n        onVolumeChange(newValue)\n    };\n\n    return (\n        <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        wrap='nowrap'\n        className={classes.root}\n        >\n            <Grid item>\n                <IconButton\n                onClick={\n                    withoutPropagation(onVolumeChange, value < 10? 0 : value-10)\n                }>\n                    <VolumeDownIcon/>\n                </IconButton>\n            </Grid>\n            <Grid item className={classes.slider}>\n                <Slider \n                value={value}\n                aria-labelledby=\"continuous-slider\" \n                onChange={handleSliderChange}/>\n            </Grid>\n            <Grid item>\n                <IconButton\n                onClick={\n                    withoutPropagation(onVolumeChange, value > 90 ? 100 : value+10)\n                }>\n                    <VolumeUpIcon/>\n                </IconButton>\n            </Grid>\n        </Grid>\n    )\n}","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport PlayIcon from \"@material-ui/icons/PlayArrowRounded\";\nimport Typography from \"@material-ui/core/Typography\"\nimport Grid from \"@material-ui/core/Grid\"\nimport ReorderIcon from '@material-ui/icons/Menu'\n\nimport CoverArt from './CoverArt';\nimport withoutPropagation from '../utils/withoutPropagation';\n\nconst styles = theme => ({\n    root: {\n        maxHeight:'100%',\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.shape.borderRadius,\n        padding: theme.spacing(),\n        '& > *':{\n            marginRight: theme.spacing()\n        }\n    },\n    coverArt: {\n        height:'50px'\n    },\n    nowPlayingIconContainer: {\n        position: 'absolute', \n        top: 0, \n        left: 0,\n        height: '100%', \n        width: '100%'\n    }\n  });\n\nclass PlaylistItemTemplate extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.props = props\n\n    }\n\n\n    render() {\n\n        const {\n\n            item,\n            dragHandleProps,\n            commonProps,\n            classes\n\n        } = this.props;\n\n        return (\n            <Grid \n            container\n            direction='row'\n            justifyContent='space-between'\n            alignItems='center'\n            wrap='nowrap'\n            className={classes.root}\n            onClick={\n                withoutPropagation(\n                    commonProps.onTrackSelect, commonProps.listOfID.findIndex((ID) => ID === item.ID)\n                )\n            }\n            >\n                {Boolean(commonProps.currentTrackID === item.ID) ? <PlayIcon item /> : null}\n                \n                <CoverArt item src={item.coverArt} size='50px'/>\n                \n                <Grid item xs={9}>\n                    <Typography variant='subtitle1'>\n                        {item.title}\n                    </Typography>\n                    <Typography variant='subtitle2'>\n                        {item.artist}\n                    </Typography>\n                </Grid>\n                \n                <Grid item xs={1}>\n                    <ReorderIcon \n                    item {...dragHandleProps}\n                    onClick={(e) => {e.stopPropagation()}}/>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nPlaylistItemTemplate.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nexport default withStyles(styles)(PlaylistItemTemplate);","import React,{useState} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport PlaylistIcon from \"@material-ui/icons/QueueMusic\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ReactDraggableList from 'react-draggable-list';\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Popover from '@material-ui/core/Popover';\r\n\r\nimport PlaylistItemTemplate from './PlaylistItemTemplate.js'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        position: isDesktop=> isDesktop? 'relative': null,\r\n        bottom: isDesktop=> isDesktop? 0 : null\r\n    },\r\n    draggablelistContainer: {\r\n        overflow: 'auto',\r\n        height: isDesktop => isDesktop ? '50vh' :'60vh',\r\n        width: isDesktop => isDesktop ? '25vw' : null,\r\n        margin: theme.spacing(),\r\n    },\r\n    buttonGroup: {\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        width: '50%'\r\n    }\r\n}));\r\n\r\nexport default function PlaylistControl(props){\r\n\r\n    const {\r\n        list,\r\n        isShuffled,\r\n        currentTrackIndex,\r\n        isDesktop,\r\n        onReorder,\r\n        onShuffle,\r\n        onTrackSelect\r\n    } = props\r\n\r\n    const classes = useStyles(isDesktop);\r\n    const [values, setValues] = useState(isShuffled ? ['shuffle']: []);\r\n    const [expanded, expand] = useState(false);\r\n    const [anchorEl, setAnchor] = useState(null)\r\n\r\n    const handleChange = (event, newValues) => {\r\n        event.stopPropagation()\r\n        \r\n        setValues(newValues);\r\n        if (Boolean(newValues.find( element => element === 'show-playlist' ))){\r\n            setAnchor(event.target.parentElement.parentElement)\r\n            expand(true);\r\n        }else expand(false)\r\n\r\n        if (Boolean(newValues.find( element => element === 'shuffle' ))){\r\n            onShuffle(true)\r\n        }else onShuffle(false)\r\n    };\r\n\r\n    const handlePopoverClose = (event) => {\r\n        const newValues = values.filter(value => value !== 'show-playlist')\r\n        console.log(newValues)\r\n        setValues(newValues);\r\n        setAnchor(null)\r\n        expand(false);\r\n    };\r\n\r\n    const draggablelistContainerRef = React.createRef();\r\n    const reactDraggableList = (<Paper\r\n                                elevation='0'\r\n                                className={classes.draggablelistContainer}\r\n                                ref={draggablelistContainerRef}>\r\n                                    <ReactDraggableList \r\n                                    list={list}\r\n                                    itemKey='ID'\r\n                                    template={PlaylistItemTemplate}\r\n                                    onMoveEnd={(newList)=> {\r\n                                        onReorder(\r\n                                            newList, \r\n                                            newList.findIndex(\r\n                                                (track) => {\r\n                                                    return track.ID === list[currentTrackIndex].ID\r\n                                                }\r\n                                            )\r\n                                        )}\r\n                                    }\r\n                                    container={()=> draggablelistContainerRef.current }\r\n                                    commonProps={{\r\n                                        listOfID: list.map((element) => element.ID),\r\n                                        currentTrackID: list[currentTrackIndex].ID,\r\n                                        onTrackSelect: onTrackSelect\r\n                                    }}\r\n                                    />\r\n                                </Paper>)\r\n                                \r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            {isDesktop?\r\n            <Popover\r\n            open={Boolean(anchorEl)}\r\n            anchorEl={anchorEl}\r\n            onClose={handlePopoverClose}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n              }}\r\n            >\r\n                {reactDraggableList}\r\n            </Popover>\r\n            :\r\n            <Collapse\r\n            collapsedHeight={'0'}\r\n            in={expanded}\r\n            >\r\n                {reactDraggableList}\r\n            </Collapse>}\r\n\r\n            <ToggleButtonGroup\r\n            className={classes.buttonGroup}\r\n            position='center' \r\n            value={values}\r\n            onChange={handleChange}\r\n            >\r\n                <ToggleButton \r\n                value='shuffle'\r\n                className={classes.button}\r\n                >\r\n                    <ShuffleIcon/>\r\n                </ToggleButton>\r\n\r\n                <ToggleButton \r\n                value='show-playlist'\r\n                className={classes.button}\r\n                >\r\n                    <PlaylistIcon/>\r\n                </ToggleButton>\r\n\r\n            </ToggleButtonGroup>\r\n\r\n        </div>\r\n    )\r\n}","const actionTypes = { \n     CHANGE_TRACK: 'CHANGE_TRACK',\n     PLAY: 'PLAY',\n     PAUSE:'PAUSE',\n     STOP: 'STOP',\n     SHUFFLE: 'SHUFFLE',\n     UPDATE_PLAYLIST:'UPDATE_PLAYLIST',\n     CHANGE_VOLUME:'CHANGE_VOLUME',\n     SET_START_TIME: 'SET_START_TIME',\n     SET_STOP_TIME: 'SET_STOP_TIME',\n     SET_CURRENT_TIME: 'SET_CURRENT_TIME',\n     SET_TIME_LEFT: 'SET_TIME_LEFT',\n     MAXIMISE: 'MAXIMISE',\n     MINIMISE: 'MINIMISE',\n     SEEK: 'SEEK'\n}\n\nexport default actionTypes\n","import actionTypes from './actionTypes.js'\n\nconst actionCreators = {\n    \n    changeTrack: (index) => ({\n        type: actionTypes.CHANGE_TRACK,\n        payload: {\n            index: index\n        }\n    }),\n\n    play: () => ({\n        type: actionTypes.PLAY,\n    }),\n\n    pause: () => ({\n        type: actionTypes.PAUSE\n    }),\n\n    updatePlaylist: (playlist) => ({\n        type: actionTypes.UPDATE_PLAYLIST,\n        payload: {\n            playlist: playlist\n        }\n    }),\n\n    volumeChange: (level) => ({\n        type: actionTypes.VOLUME_CHANGE,\n        payload: {\n            level: level\n        }\n    }),\n\n    shuffle: (bool) => ({\n        type: actionTypes.SHUFFLE,\n        payload: {shuffle: bool}\n    }),\n\n    maximise: () => ({\n        type: actionTypes.MAXIMISE\n    }),\n\n    minimise: ()=> ({\n        type: actionTypes.MINIMISE\n    }),\n\n    setCurrentTime: (currentTime) => ({\n        type: actionTypes.SET_CURRENT_TIME,\n        payload: {\n            currentTime: currentTime\n        }\n    }),\n\n    setTimeLeft: (timeLeft) => ({\n        type: actionTypes.SET_TIME_LEFT,\n        payload : {\n            timeLeft: timeLeft\n        }\n    }),\n\n    seek: (time) => ({\n        type: actionTypes.SEEK,\n        payload: {\n            time: time\n        }\n    }),\n\n    changeVolume: (value) => ({\n        type: actionTypes.CHANGE_VOLUME,\n        payload: {\n            volume: value\n        }\n    })\n}\n\nexport default actionCreators ","import React from 'react'\n\nimport Collapse from '@material-ui/core/Collapse'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { IconButton } from '@material-ui/core';\nimport { ArrowForwardIos } from '@material-ui/icons';\n\nimport CoverArt from './CoverArt.js';\nimport TrackDetails from './TrackDetials.js'\nimport ProgressBar from './ProgressBar.js'\nimport Controls from './Controls.js';\nimport VolumeControl from './VolumeControl.js'\nimport PlaylistControl from './PlaylistControl.js'\nimport withoutPropagation from '../utils/withoutPropagation.js';\n\nimport { connect } from 'react-redux'\nimport actionCreators from '../redux/actionCreators.js'\n\nimport '../css/keyframes.css'\n\nconst MAXHEIGHT = '90vh'\nconst MINHEIGHT = '10vh'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: \"fixed\",\n        bottom: 0,\n        overflow: isDesktop => isDesktop? 'visible': 'hidden',\n    },\n    paper: {\n        width:'100vw',\n        height: MAXHEIGHT,\n    },\n    container: {\n        '& > div': {\n            margin: isDesktop => isDesktop? theme.spacing(): null\n        }\n    },\n    dropDownButton: {\n        width: '100%',\n        order: 7,\n        '& > *':{\n            transform: 'rotate(90deg)',\n        }\n    },\n    coverArt: {\n        order: 6\n    },\n    trackDetails: {\n        width: isDesktop=> isDesktop? '10%': '20%',\n        order: 5\n    },\n    progressBar: {\n        width: isDesktop => isDesktop? '60%' : '80%',\n        order: isDesktop => isDesktop ? 3 : 4\n    },\n    control: {\n        width: isDesktop => isDesktop? '10%' : '60%',\n        order: isDesktop => isDesktop ? 4 : 3,\n    },\n    volumeControl: {\n        width: isDesktop => isDesktop? '10%': '100%' ,\n        order: 2\n    },\n    playlistControl: {\n        width: isDesktop=> isDesktop? '10%':'100%',\n        order: 1,\n    } \n  }));\n\nfunction Player(props){\n\n    const theme = useTheme();\n    const isDesktop = useMediaQuery('(min-width:768px)');\n    const classes = useStyles(isDesktop);\n\n    const {\n        mediaState,\n        currentTrack,\n        shuffled,\n        maximised,\n        playlist,\n        onPlay,\n        onPause,\n        onChangeTrack,\n        onReorder,\n        onShuffle,\n        onMaximise,\n        onMinimise,\n        currentTime,\n        timeLeft,\n        onSeek,\n        onVolumeChange,\n        volume\n    } = props\n\n    // if no songs are loaded do not load player\n    if(playlist.length === 0)\n    return null;\n\n    const maximise = () => {\n        if(isDesktop || maximised)\n        return\n\n        onMaximise()\n    }\n\n    const minimise = () => {\n        if(!maximised)\n        return\n\n        onMinimise()\n    }\n\n    return (\n        <Collapse\n        className={classes.root}\n        collapsedHeight={MINHEIGHT}\n        in={maximised}\n        >\n            <Paper \n            className={classes.paper}\n            onClick={withoutPropagation(maximise)}>\n                <Grid\n                container\n                direction={maximised ? 'column-reverse' : 'row-reverse'}\n                justify='space-between'\n                alignItems='center'\n                wrap='nowrap'\n                className={classes.container}\n                style = {{\n                    height: maximised ? MAXHEIGHT : MINHEIGHT,\n                    padding: maximised? theme.spacing(4): theme.spacing(),\n                    paddingTop: '0px' // push drop down button up\n                }}\n                >\n                    {maximised ?\n                    <IconButton\n                    className={classes.dropDownButton}\n                    onClick={withoutPropagation(minimise)}\n                    >\n                        <ArrowForwardIos fontSize=\"small\"/>\n                    </IconButton>: null}\n\n                    <Grid item className={classes.coverArt}>\n                        <CoverArt \n                        src={playlist[currentTrack].coverArt} \n                        size={maximised? '40vh': '6vh'}/>\n                    </Grid>\n\n                    <Grid \n                    item\n                    className={classes.trackDetails}\n                    style={{width: maximised? '80%' : null}}>\n                        <TrackDetails \n                        title={playlist[currentTrack].title}\n                        artist={playlist[currentTrack].artist}\n                        showArtist={maximised}/>\n                    </Grid>\n\n                    {maximised || isDesktop ? \n                    <Grid item className={classes.progressBar}>\n                        <ProgressBar \n                        currentTime={currentTime} \n                        timeLeft={timeLeft}\n                        onSeek={onSeek}/>\n                    </Grid> : null}\n\n                    <Grid\n                    item\n                    className={classes.control}>\n                        <Controls\n                        disabled = {playlist.length === 0}\n                        isPlaying={mediaState === 'playing' ? true: false}\n                        onPlay={onPlay}\n                        onPause={onPause}\n                        onSkipNext={() => onChangeTrack(currentTrack+1)}\n                        onSkipPrev={() => onChangeTrack(currentTrack-1)}\n                        />\n                    </Grid>\n\n                    {maximised || isDesktop ?\n                    <Grid item className={classes.volumeControl}>\n                        <VolumeControl \n                        value = {volume}\n                        onVolumeChange={onVolumeChange}/>\n                    </Grid> : null}\n\n                    {maximised || isDesktop?\n                    <Grid item className={classes.playlistControl}>\n                        <PlaylistControl \n                        list={playlist}\n                        isShuffled={shuffled}\n                        currentTrackIndex={currentTrack}\n                        isDesktop={isDesktop}\n                        onReorder={onReorder}\n                        onShuffle={onShuffle}\n                        onTrackSelect={onChangeTrack}\n                        />\n                    </Grid> : null}\n                    \n                </Grid>\n            </Paper>\n        </Collapse>\n    );\n}\n\nfunction mapStateToProps(state){\n    return {...state};\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        onPlay: () => dispatch(actionCreators.play()),\n        onPause: () => dispatch(actionCreators.pause()),\n        onChangeTrack: (index) => dispatch(actionCreators.changeTrack(index)),\n        onReorder: (playlist, currentTrack) =>{\n            dispatch(actionCreators.updatePlaylist(playlist))\n            dispatch(actionCreators.changeTrack(currentTrack))\n        },\n        onShuffle: (bool) => dispatch(actionCreators.shuffle(bool)),\n        onMaximise: () => dispatch(actionCreators.maximise()),\n        onMinimise: () => dispatch(actionCreators.minimise()),\n        onSeek: (time) => dispatch(actionCreators.seek(time)),\n        onVolumeChange: (value) => dispatch(actionCreators.changeVolume(value))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player)","export default function Track(trackID,coverArt, title, artist, source){\n    this.ID = trackID\n    this.coverArt = coverArt\n    this.title = title\n    this.artist = artist\n    this.source = source\n\n    this.getSource = function(){\n        return source;\n    }\n}","const eventTypes = {\n    PLAY: 'PLAY',\n    PLAYLATER: 'PLAY LATER',\n    PLAYNEXT: 'PLAY NEXT'\n}\n\nexport default eventTypes ","import EventTypes from './constants/EventTypes.js'\n\nfunction play( playlist ){\n    const event = new CustomEvent(EventTypes.PLAY, {detail: playlist})\n    window.dispatchEvent(event)\n}\n\nfunction playNext( playlist ){\n    const event = new CustomEvent(EventTypes.PLAYNEXT, {detail: playlist})\n    window.dispatchEvent(event)\n}\n\nfunction playLater( playlist ){\n    const event = new CustomEvent(EventTypes.PLAYLATER, {detail: playlist})\n    window.dispatchEvent(event)\n}\n\nconst interfaceObject = {\n    play: play,\n    playNext: playNext,\n    playLater: playLater\n}\n\nexport default interfaceObject","import {combineReducers} from 'redux'\n\nimport actionTypes from './actionTypes.js'\n\nfunction mediaState( state = 'stopped', action){\n\n    switch(action.type){\n        case actionTypes.PLAY:\n            return 'playing'\n        case actionTypes.PAUSE:\n            return 'paused'\n        case actionTypes.STOP:\n            return 'stopped'\n        default:\n            return state\n    }\n}\n\nfunction playlist(state = [], action){\n    if(action.type === actionTypes.UPDATE_PLAYLIST)\n    return action.payload.playlist;\n    else\n    return state\n}\n\nfunction currentTrack(state = 0, action){\n    if(action.type === actionTypes.CHANGE_TRACK)\n    return action.payload.index;\n    else\n    return state\n}\n\nfunction shuffled(state = false, action){\n    if(action.type === actionTypes.SHUFFLE)\n    return action.payload.shuffle\n    else\n    return state\n}\n\nfunction maximised(state = false, action){\n    switch(action.type){\n        case actionTypes.MAXIMISE:\n            return true\n        case actionTypes.MINIMISE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction currentTime(state = 0, action){\n    if(action.type === actionTypes.SET_CURRENT_TIME)\n    return action.payload.currentTime;\n    else\n    return state\n}\n\nfunction timeLeft(state = 0, action){\n    if(action.type === actionTypes.SET_TIME_LEFT)\n    return action.payload.timeLeft\n    else\n    return state\n}\n\nfunction volume(state = 0, action){\n    if(action.type === actionTypes.CHANGE_VOLUME)\n    return action.payload.volume\n    else\n    return state\n}\n\nexport default combineReducers( {mediaState, playlist, currentTrack, shuffled, maximised, currentTime, timeLeft, volume});","import actionTypes from '../actionTypes.js'\nimport actionCreators from '../actionCreators.js'\nimport { MediaStates } from '../store.js';\n\nimport AudioOutput from '../../model/AudioOutput.js';\n\nconst audioElement = new AudioOutput()\n\nconst audioOutput = (store) => {\n\n    audioElement.addEventListener('timeupdate', () => {\n\n        //set current time updater\n        store.dispatch(\n            actionCreators.setCurrentTime(\n                Math.floor(audioElement.currentTime)\n            )\n        )\n\n        // set time left updater\n        store.dispatch(\n            actionCreators.setTimeLeft(\n                Math.floor(isNaN(audioElement.duration)? 0 : audioElement.duration - audioElement.currentTime)\n            )\n        )\n\n        // set canplay listener incase there is buffering\n        audioElement.addEventListener('canplay', ()=>{\n            let mediaState = store.getState().mediaState\n            if(mediaState === MediaStates.playing)\n            audioElement.play()\n        })\n\n        // skip to next track after playback ends\n        audioElement.addEventListener('ended', ()=>{\n\n            // check if fully ended\n            if(audioElement.currentTime !== audioElement.duration)\n            return\n\n            let currentIndex = store.getState().currentTrack\n            let mediaState = store.getState().mediaState\n\n            if(mediaState === MediaStates.playing)\n            store.dispatch(actionCreators.changeTrack(++currentIndex))\n        })\n    })\n\n    // set default volume level\n    audioElement.volume = store.getState().volume/100\n\n    return (next) => (action) => {\n\n        let state = store.getState();\n    \n        switch(action.type){\n            case actionTypes.CHANGE_TRACK:\n                let currentTrack = audioElement.track\n                let newTrack = state.playlist[action.payload.index]\n\n                if(currentTrack.ID !== newTrack.ID) // only update if not same track\n                {\n                    audioElement.src = state.playlist[action.payload.index]\n                    if(\n                        state.mediaState === MediaStates.playing \n                        && audioElement.readyState >= 2 ) // buffered enough to start playing\n                    audioElement.play() // continue playing if previous track was playing\n                }\n                break\n\n            case actionTypes.PLAY:\n                if( audioElement.src === \"\" )\n                    audioElement.src = state.playlist[state.currentTrack]\n                audioElement.play()\n                break\n\n            case actionTypes.PAUSE:\n                audioElement.pause()\n                break\n\n            case actionTypes.STOP:\n                audioElement.src = \"\"\n                break\n\n            case actionTypes.SEEK:\n                if( audioElement.src !== \"\")\n                audioElement.currentTime = action.payload.time;\n                break\n\n            case actionTypes.CHANGE_VOLUME:\n                audioElement.volume = action.payload.volume/100;\n                break\n\n            default:\n                break\n        }\n    \n        return next(action);\n    }\n\n}\n\nexport default audioOutput","import TrackModel from './TrackModel'\n\nexport default class AudioOutput extends Audio{\n\n    constructor(){\n        super()\n        this.track = new TrackModel(-1,\"\", \"\", \"\", \"\") // default track\n    }\n\n    set src(track){\n        if(track !==  undefined || track !== \"\"){\n            this.track = track\n            super.src = track.source\n        }else super.src = \"\"\n    }\n\n    get src(){\n        return super.src\n    }\n}","import actionTypes from '../actionTypes.js'\nimport actionCreators from '../actionCreators.js'\n\nimport shuffle from '../../utils/shuffle.js'\n\nconst shuffler = (store) => (next) => (action) => {\n    \n    let state = store.getState();\n\n    if(action.type === actionTypes.SHUFFLE\n        && state.shuffled !== action.payload.shuffle){\n        \n        let playlist = state.playlist;\n        let currentIndex = state.currentTrack\n        let currentTrack = playlist[state.currentTrack] // current track \n        let upper = playlist.slice(0, currentIndex)\n        let lower = playlist.slice(currentIndex+1, playlist.lenth)\n        \n        let withoutCurrent = upper.concat(lower)\n\n        withoutCurrent = action.payload.shuffle ? \n            shuffle(withoutCurrent) :  withoutCurrent.sort(\n                (first, second) => first.ID < second.ID\n            )\n\n        // update playlist with current track on top\n        store.dispatch(\n            actionCreators.updatePlaylist([currentTrack, ...withoutCurrent])\n        )\n        store.dispatch(actionCreators.changeTrack(0))\n    }\n\n    return next(action)\n}\n\nexport default shuffler","export default function shuffle(array){\n\n    let newArray = array;\n\n    for(let i = 0; i<Math.ceil(array.length/2); i++){\n\n        let randIndex1 = Math.round(Math.random() * (array.length-1))\n        let randIndex2 = Math.round(Math.random() * (array.length-1))\n\n        let temp = newArray[randIndex1]\n        newArray[randIndex1] = newArray[randIndex2]\n        newArray[randIndex2] = temp\n    }\n\n    return newArray\n}","import actionTypes from '../actionTypes.js'\n\nconst changeTrackHelper = (store) => {\n\n    return (next) => (action) => {\n\n        let currentState = store.getState()\n\n        // stop dispatch if current track if index out of bound\n        if( action.type === actionTypes.CHANGE_TRACK\n            && (\n                action.payload.index < 0 ||\n                action.payload.index >= currentState.playlist.length\n            )\n        )\n            return;\n        \n\n        return next(action);\n        \n    }\n\n}\n\nexport default changeTrackHelper","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers'\n\nimport audioOutput from './middleware/audioOutput.js'\nimport shuffler from './middleware/shuffler.js'\nimport eventHandler from './middleware/events.js'\nimport changeTrackHelper from './middleware/changeTrackHelper'\n\nexport var MediaStates = {\n  stopped: 'stopped',\n  playing: 'playing',\n  paused: 'paused'\n}\n\nexport default createStore(rootReducer, {\n    mediaState: MediaStates.stopped,\n    currentTrack: 0,\n    shuffled: false,\n    maximised: false,\n    playlist: [],\n    volume: 25\n}, applyMiddleware(eventHandler, shuffler, changeTrackHelper, audioOutput))","import actionCreators from '../actionCreators.js';\nimport EventTypes from '../../constants/EventTypes.js'\n\nexport default function eventHandler(store){\n\n    window.addEventListener( \n        EventTypes.PLAY, \n        function(e) { \n            store.dispatch(\n                actionCreators.updatePlaylist(e.detail)\n            )\n        }\n    );\n\n\n\n    // track change event listener\n    let playNextAfterHandler = (e) => {\n\n        let currentPlaylist = store.getState().playlist\n        let currentTrack = store.getState().currentTrack\n\n        let newPlaylist = []\n\n        if(e.type === EventTypes.PLAYNEXT)\n            newPlaylist = currentPlaylist.reduce( \n\n                (accumulator, currentValue , index) => {\n\n                    if(index === currentTrack)\n                        return [...accumulator, currentValue, ...e.detail]\n                    else    return [...accumulator, currentValue]\n                },\n                []\n            )\n        else if(e.type === EventTypes.PLAYLATER){\n            newPlaylist = currentPlaylist.concat(e.detail)\n        }\n\n        store.dispatch(\n            actionCreators.updatePlaylist(newPlaylist)\n        )\n    }\n\n    window.addEventListener( \n        EventTypes.PLAYNEXT, \n        playNextAfterHandler\n    );\n\n    window.addEventListener( \n        EventTypes.PLAYLATER, \n        playNextAfterHandler\n    );\n\n    return (next) => (action) => {\n         return next(action)\n    }\n\n}","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport Player from './components/Player.js'\nimport trackModel from './model/TrackModel.js'\nimport playerInterface from './interface.js'\nimport store from './redux/store.js'\n\nexport default function main(){\n    return(\n        <Provider store={store}>\n            <Player/>\n        </Provider>\n    )\n}\nexport const TrackModel = trackModel\nexport const PlayerInterface = playerInterface\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// To use the player this is what you need to import\nimport Player, { TrackModel, PlayerInterface } from './module/index.js'\n\n// get media data over tthe internet\nconst TEST_MEDIA = \"https://raw.githubusercontent.com/the-maazu/react-material-music-player/master/sample_media/\"\n\n// update playlist with test dataS\nPlayerInterface.play( \n  [ new TrackModel(\n    1, TEST_MEDIA +\"bach.jpg\",\"68 Choral\", \"Bach\",\n    TEST_MEDIA+\"Bach%20--%20BWV%20245%20--%2068%20Choral.mp3\")\n  ] \n)\n\n// wait 3 seconds then adds music at end of playlist\nwindow.setTimeout(\n  () => PlayerInterface.playLater( \n    [ new TrackModel(\n      2, TEST_MEDIA +\"emerson.jpeg\",\"All through the night\", \n      \"Emerson\",TEST_MEDIA +\"Emerson%20--%20All%20through%20the%20Night%20(Ar%20Hyd%20y%20Nos).mp3\")\n    ] \n  ), \n  3000 // 3 seconds\n)\n\n// wait 6 seconds then add music after current track\nwindow.setTimeout(\n  () => PlayerInterface.playNext(\n    [ new TrackModel(\n      3, TEST_MEDIA +\"guido.jpg\",\"Ut queant laxis\", \"Guido von Arezzo\",\n      TEST_MEDIA +\"Guido%20von%20Arezzo%20--%20Ut%20queant%20laxis.mp3\")\n    ]\n  ),\n  6000// 6 seconds\n)\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          react-material-music-player\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/the-maazu/react-material-music-player\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub\n        </a>\n        <a\n          className=\"App-link\"\n          href=\"https://www.npmjs.com/package/react-material-music-player\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          npmjs\n        </a>\n      </header>\n\n      {/* simply render player*/}\n      <Player/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}