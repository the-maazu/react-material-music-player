{"version":3,"sources":["logo.svg","module/components/CoverArt.js","module/components/TrackDetials.js","module/redux/types.js","module/redux/actionCreators.js","module/utils/secondsToString.js","module/components/ProgressBar.js","module/utils/withoutPropagation.js","module/components/Controls.js","module/components/VolumeControl.js","module/components/Playlist/PlaylistItemTemplate.js","module/components/Playlist/Playlist.js","module/components/Playlist/PlaylistControl.js","module/components/Player.js","module/interface.js","module/redux/reducers.js","module/redux/middleware/audioOutput.js","module/redux/middleware/shuffler.js","module/utils/shuffle.js","module/redux/middleware/changeTrackHelper.js","module/redux/middleware/updatePlaylistHelper.js","module/redux/middleware/mediaSessionActions.js","module/redux/middleware/skipHelper.js","module/redux/store.js","module/redux/middleware/events.js","module/index.js","App.js","makeTheme.js","serviceWorker.js","index.js"],"names":["StyledImg","styled","height","width","border","CoverArt","props","src","sx","Box","borderColor","borderRadius","overflow","alt","TrackDetails","useSelector","state","currentTrack","playlist","title","artist","shallowEqual","typography","whiteSpace","Track","trackID","coverArt","source","this","ID","getSource","MediaState","RepeatMode","CustomNativeEventTypes","AudioOutput","track","undefined","isCurrent","setMediaMetadata","navigator","mediaSession","metadata","window","MediaMetadata","album","artwork","setSrc","Audio","ActionTypes","ActionCreators","changeTrack","index","type","payload","play","pause","stop","updatePlaylist","volumeChange","volume","shuffle","bool","setCurrentTime","currentTime","setTimeLeft","timeLeft","seek","time","changeVolume","setRepeatMode","skipNext","skipPrev","secondsToString","seconds","minutes","Math","floor","toString","mseconds","length","ProgressBar","progress","dispatch","useDispatch","display","flexDirection","wrap","alignItems","mx","Typography","className","Slider","value","onChange","event","newValue","actionCreators","withoutPropagation","callback","args","e","stopPropagation","Controls","mediaState","playing","justifyContent","flexWrap","IconButton","onClick","size","fontSize","VolumeControl","onVolumeChange","direction","VolumeDown","VolumeUp","PlaylistItemTemplate","commonProps","item","onTrackSelect","listOfID","indexOf","dragHandleProps","itemSelected","maxHeight","boxSizing","padding","boxShadow","flexGrow","handleSelect","bind","currentTrackID","React","Component","Playlist","draggablelistContainerRef","createRef","ref","margin","theme","spacing","list","itemKey","template","onMoveEnd","newList","container","current","map","element","classes","button","RootBox","BouttonContainer","RepeatButton","other","ToggleButton","selected","RepeatRounded","RepeatOnRounded","RepeatOneOnRounded","ShuffleButton","ShuffleOnRounded","ShuffleRounded","PlaylistControl","playlistViewMode","shuffled","repeatMode","useState","playlistVisible","showPlaylist","anchorEl","setAnchor","target","parentElement","Popover","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Collapse","collapsedSize","in","PREFIX","RootPaper","Paper","position","bottom","shape","paddingRight","paddingLeft","transition","transitions","create","SwipeableDrawerRoot","marginTop","backgroundColor","palette","action","disabled","top","left","RowBox","ColumnBox","CenterChildBox","Player","disableDrawer","useTheme","maximised","setMaximised","isLarge","setLarge","forceUpdate","setValue","useForceUpdate","openSwipeableDrawer","closeSwipeableDrawer","rootRef","useRef","useEffect","clientWidth","breakpoints","values","md","onresize","elevation","flexShrink","textAlign","SwipeableDrawer","anchor","onOpen","mt","interfaceObject","CustomEvent","detail","dispatchEvent","playNext","playLater","combineReducers","audio","audioOutput","store","addEventListener","isNaN","duration","getState","catch","isLastTrack","next","nexTrack","clear","shuffler","currentIndex","upper","slice","lower","lenth","withoutCurrent","concat","array","newArray","i","ceil","randIndex1","round","random","randIndex2","temp","sort","first","second","changeTrackHelper","updatePlaylistHelper","newPlaylist","result","playlistChanged","newCurrentTrack","mediaSessionActions","setActionHandler","actionCreator","skipHelper","configureStore","reducer","rootReducer","middleware","push","playNextAfterHandler","currentPlaylist","reduce","accumulator","currentValue","preloadedState","TrackModel","TEST_MEDIA","PlayerInterface","setTimeout","App","mode","setMode","isDark","useMediaQuery","createTheme","primary","main","secondary","divider","active","hover","hoverOpacity","selectedOpacity","text","icon","background","paper","commonStyleOverrides","MuiPaper","styleOverrides","root","alpha","backdropFilter","MuiToggleButton","defaultProps","color","MuiSlider","thumb","mergedComponentStyles","deepmerge","components","MuiIconButton","makeTheme","borderRadiusTL","borderRadiusTR","borderRadiusBL","borderRadiusBR","setSx","handleForm","id","ThemeProvider","bgcolor","logo","Link","href","rel","ToggleButtonGroup","exclusive","LightModeRounded","ComputerRounded","DarkModeRounded","TextField","label","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.44d591a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\n\nimport { Box } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nconst StyledImg = styled(\"img\")(() => ({\n  height: \"100%\",\n  width: \"100%\",\n  border: \"0px\",\n}));\n\nexport default function CoverArt(props) {\n  const { src, sx } = props;\n\n  return (\n    <Box\n      sx={{\n        border: 1,\n        borderColor: \"divider\",\n        borderRadius: 2,\n        overflow: \"hidden\",\n        ...sx,\n      }}\n    >\n      <StyledImg src={src} alt={\"\"} />\n    </Box>\n  );\n}\n","import React from \"react\";\n\nimport { shallowEqual, useSelector } from \"react-redux\";\n\nimport Box from \"@mui/material/Box\";\n\nexport default function TrackDetails(props) {\n  const { title, artist } = useSelector(\n    /**@type {import(\"../redux/types\").useSelectCb} */\n    (state) => {\n      let currentTrack = state.playlist[state.currentTrack];\n      return {\n        title: currentTrack.title,\n        artist: currentTrack.artist,\n      };\n    },\n    shallowEqual\n  );\n\n  const sx = props.sx;\n\n  return (\n    <Box sx={sx}>\n      <Box\n        sx={{\n          typography: \"subtitl3\",\n          whiteSpace: \"nowrap\",\n          overflow: \"hidden\",\n        }}\n      >\n        {title}\n      </Box>\n      <Box\n        sx={{\n          typography: \"subtitle2\",\n          whiteSpace: \"nowrap\",\n          overflow: \"hidden\",\n        }}\n      >\n        {artist}\n      </Box>\n    </Box>\n  );\n}\n","/**\n * This contains all data needed for a song\n * @constructor\n * @param {!string} trackID - Unique identifier used in sorting after shuffle\n * @param {!string} coverArt -  URL to cover art image\n * @param {!string} title\n * @param {!string} artist\n * @param {!string} source - URL to music file\n */\nfunction Track(trackID, coverArt, title, artist, source) {\n  /** @readonly*/\n  this.ID = trackID;\n  /** @readonly*/\n  this.coverArt = coverArt;\n  /**@readonly */\n  this.title = title;\n  /**@readonly */\n  this.artist = artist;\n  /** @readonly*/\n  this.source = source;\n\n  this.getSource = function () {\n    return source;\n  };\n}\n\n/**\n * @typedef {object} State - State object\n * @prop {MediaState} mediaState - Media state\n * @prop {number} currentTrack - Current time in seconds\n * @prop {boolean} shuffled - Boolean representation of whether playlist is shuffled or not\n * @prop {Array<Track>} playlist - Array of tracks supplied to player\n * @prop {number} currentTime - Current progress in seconds\n * @prop {number}  timeLeft - Time left to end play in seconds\n * @prop {number} volume - Volme level\n * @prop {RepeatMode} repeatMode - Repeat mode\n */\n\n/**\n * Media states\n * @enum {string}\n */\nconst MediaState = {\n  STOPPED: \"STOPPED\",\n  PLAYING: \"PLAYING\",\n  PAUSED: \"PAUSED\",\n};\n\n/**\n * Repeat modes\n * @enum {string}\n */\nconst RepeatMode = {\n  NORMAL: \"NORMAL\",\n  REPEAT_ALL: \"REPEAT_ALL\",\n  REPEAT_ONE: \"REPEAT_ONE\",\n};\n\n/**\n * Custom native events for interface\n * @enum {string}\n */\nconst CustomNativeEventTypes = {\n  PLAY: \"PLAY\",\n  PLAY_LATER: \"PLAY_LATER\",\n  PLAY_NEXT: \"PLAY_NEXT\",\n};\n\n/** Call back for useSelect hook\n * @callback useSelectCb\n * @param {State} state\n */\n\n/**\n * Audio output model\n * @class\n * @extends {Audio}\n */\nclass AudioOutput extends Audio {\n  constructor() {\n    super();\n    /**@private */\n    this.track = new Track(\"\", \"\", \"\", \"\", \"\"); // default track\n  }\n\n  /**\n   * Sets source of audio\n   * @param {Track} track\n   */\n  setSrc(track) {\n    if (track === undefined) return;\n    if (!this.isCurrent(track)) {\n      this.src = track.source;\n      this.track = track;\n      this.setMediaMetadata(track);\n    }\n  }\n\n  setMediaMetadata(track) {\n    if (\"mediaSession\" in navigator) {\n      if (!track) navigator.mediaSession.metadata = null;\n      else\n        navigator.mediaSession.metadata = new window.MediaMetadata({\n          title: track.title,\n          artist: track.artist,\n          album: \"\",\n          artwork: [{ src: track.coverArt }],\n        });\n    }\n  }\n\n  /**\n   * Unsets audio can be used to stop play\n   */\n  clear() {\n    if (this.src === \"\") return;\n    this.setSrc(new Track(\"\", \"\", \"\", \"\", \"\"));\n    this.setMediaMetadata(null);\n  }\n\n  /**\n   * Check if same track loaded\n   * @param {Track} track\n   * @returns {boolean}\n   */\n  isCurrent(track) {\n    return this.track.ID === track.ID;\n  }\n}\n\n/**\n * Store action types\n * @enum {string}\n */\nconst ActionTypes = {\n  CHANGE_TRACK: \"CHANGE_TRACK\",\n  PLAY: \"PLAY\",\n  PAUSE: \"PAUSE\",\n  STOP: \"STOP\",\n  SHUFFLE: \"SHUFFLE\",\n  UPDATE_PLAYLIST: \"UPDATE_PLAYLIST\",\n  CHANGE_VOLUME: \"CHANGE_VOLUME\",\n  SET_START_TIME: \"SET_START_TIME\",\n  SET_STOP_TIME: \"SET_STOP_TIME\",\n  SET_CURRENT_TIME: \"SET_CURRENT_TIME\",\n  SET_TIME_LEFT: \"SET_TIME_LEFT\",\n  SEEK: \"SEEK\",\n  SET_REPEAT_MODE: \"SET_REPEAT_MODE\",\n  SKIP_NEXT: \"SKIP_NEXT\",\n  SKIP_PREV: \"SKIP_PREV\",\n};\n\nexport {\n  ActionTypes,\n  AudioOutput,\n  CustomNativeEventTypes,\n  MediaState,\n  RepeatMode,\n  Track,\n};\n","import { ActionTypes } from \"./types\";\n\nconst ActionCreators = {\n  changeTrack: (index) => ({\n    type: ActionTypes.CHANGE_TRACK,\n    payload: {\n      index: index,\n    },\n  }),\n\n  play: () => ({\n    type: ActionTypes.PLAY,\n  }),\n\n  pause: () => ({\n    type: ActionTypes.PAUSE,\n  }),\n\n  stop: () => ({\n    type: ActionTypes.STOP,\n  }),\n\n  updatePlaylist: (playlist) => ({\n    type: ActionTypes.UPDATE_PLAYLIST,\n    payload: {\n      playlist: playlist,\n    },\n  }),\n\n  volumeChange: (volume) => ({\n    type: ActionTypes.CHANGE_VOLUME,\n    payload: {\n      volume: volume,\n    },\n  }),\n\n  shuffle: (bool) => ({\n    type: ActionTypes.SHUFFLE,\n    payload: { shuffle: bool },\n  }),\n\n  setCurrentTime: (currentTime) => ({\n    type: ActionTypes.SET_CURRENT_TIME,\n    payload: {\n      currentTime: currentTime,\n    },\n  }),\n\n  setTimeLeft: (timeLeft) => ({\n    type: ActionTypes.SET_TIME_LEFT,\n    payload: {\n      timeLeft: timeLeft,\n    },\n  }),\n\n  seek: (time) => ({\n    type: ActionTypes.SEEK,\n    payload: {\n      time: time,\n    },\n  }),\n\n  changeVolume: (volume) => ({\n    type: ActionTypes.CHANGE_VOLUME,\n    payload: {\n      volume: volume,\n    },\n  }),\n\n  setRepeatMode: () => ({\n    type: ActionTypes.SET_REPEAT_MODE,\n  }),\n\n  skipNext: () => ({\n    type: ActionTypes.SKIP_NEXT,\n  }),\n\n  skipPrev: () => ({\n    type: ActionTypes.SKIP_PREV,\n  }),\n};\n\nexport default ActionCreators;\n","function secondsToString(seconds) {\n  let minutes = Math.floor(seconds / 60).toString();\n  let mseconds = Math.floor(seconds % 60).toString();\n\n  return minutes + \":\" + (mseconds.length < 2 ? \"0\" : \"\") + mseconds;\n}\n\nexport default secondsToString;\n","import React from \"react\";\n\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport actionCreators from \"../redux/actionCreators.js\";\n\nimport { Slider, Box } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\n\nimport secondsToString from \"../utils/secondsToString.js\";\n\nexport default function ProgressBar(props) {\n  const sx = props.sx;\n  const { timeLeft, currentTime } = useSelector(\n    /**@type {import(\"../redux/types.js\").useSelectCb} */\n    ({ timeLeft, currentTime }) => ({\n      timeLeft,\n      currentTime,\n    }),\n    shallowEqual\n  );\n  const progress = (currentTime / (timeLeft + currentTime)) * 100;\n\n  const dispatch = useDispatch();\n  const onSeek = (time) => dispatch(actionCreators.seek(time));\n\n  const handleSliderChange = (event, newValue) => {\n    onSeek((newValue / 100) * (currentTime + timeLeft));\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        wrap: \"nowrap\",\n        alignItems: \"center\",\n        \"& > .children\": {\n          mx: 1,\n        },\n        ...sx,\n      }}\n    >\n      <Typography className=\"children\">\n        {secondsToString(currentTime)}\n      </Typography>\n      <Slider\n        className=\"children\"\n        aria-labelledby=\"continuous-slider\"\n        value={progress}\n        onChange={handleSliderChange}\n      />\n      <Typography className=\"children\">{secondsToString(timeLeft)}</Typography>\n    </Box>\n  );\n}\n","// stop event from propagating\nfunction withoutPropagation(callback, ...args) {\n  return (e) => {\n    e.stopPropagation();\n    callback(...args);\n  };\n}\n\nexport default withoutPropagation;\n","import React from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport IconButton from \"@mui/material/IconButton\";\nimport SkipNextIcon from \"@mui/icons-material/SkipNextRounded\";\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPreviousRounded\";\nimport PlayIcon from \"@mui/icons-material/PlayArrowRounded\";\nimport PauseIcon from \"@mui/icons-material/PauseRounded\";\nimport { Box } from \"@mui/material\";\n\nimport ActionCreators from \"../redux/actionCreators\";\nimport withoutPropagation from \"../utils/withoutPropagation\";\nimport { MediaState } from \"../redux/types\";\n\nexport default function Controls(props) {\n  const sx = props.sx;\n\n  const mediaState = useSelector(\n    /** @type {import(\"../redux/types\").useSelectCb} */\n    ({ mediaState }) => mediaState\n  );\n\n  const dispatch = useDispatch();\n  const onSkipNext = () => dispatch(ActionCreators.skipNext());\n  const onSkipPrev = () => dispatch(ActionCreators.skipPrev());\n  const onPlay = () => dispatch(ActionCreators.play());\n  const onPause = () => dispatch(ActionCreators.pause());\n\n  const playing = mediaState === MediaState.PLAYING ? true : false;\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexWrap: \"nowrap\",\n        ...sx,\n      }}\n    >\n      <IconButton onClick={withoutPropagation(onSkipPrev)} size=\"large\">\n        <SkipPreviousIcon fontSize=\"large\" />\n      </IconButton>\n\n      <IconButton\n        onClick={withoutPropagation(playing ? onPause : onPlay)}\n        size=\"large\"\n      >\n        {playing ? (\n          <PauseIcon fontSize=\"large\" />\n        ) : (\n          <PlayIcon fontSize=\"large\" />\n        )}\n      </IconButton>\n\n      <IconButton onClick={withoutPropagation(onSkipNext)} size=\"large\">\n        <SkipNextIcon fontSize=\"large\" />\n      </IconButton>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport actionCreators from \"../redux/actionCreators\";\n\nimport { Slider, IconButton, Box } from \"@mui/material\";\nimport {\n  VolumeUp as VolumeUpIcon,\n  VolumeDown as VolumeDownIcon,\n} from \"@mui/icons-material\";\n\nimport withoutPropagation from \"../utils/withoutPropagation\";\n\nexport default function VolumeControl(props) {\n  const sx = props.sx;\n\n  const dispatch = useDispatch();\n  const onVolumeChange = (value) =>\n    dispatch(actionCreators.changeVolume(value));\n\n  const value = useSelector(\n    /**@type {import(\"../redux/types\").useSelectCb} */\n    (state) => state.volume\n  );\n\n  const handleSliderChange = (event, newValue) => {\n    onVolumeChange(newValue);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        direction: \"row\",\n        wrap: \"nowrap\",\n        alignItems: \"center\",\n        \"& > .children\": {\n          mx: 1,\n        },\n        ...sx,\n      }}\n    >\n      <IconButton\n        className=\"children\"\n        onClick={withoutPropagation(\n          onVolumeChange,\n          value < 10 ? 0 : value - 10\n        )}\n        size=\"large\"\n      >\n        <VolumeDownIcon />\n      </IconButton>\n      <Slider\n        className=\"children\"\n        value={value}\n        aria-labelledby=\"continuous-slider\"\n        onChange={handleSliderChange}\n      />\n      <IconButton\n        className=\"children\"\n        onClick={withoutPropagation(\n          onVolumeChange,\n          value > 90 ? 100 : value + 10\n        )}\n        size=\"large\"\n      >\n        <VolumeUpIcon />\n      </IconButton>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport {\n  PlayArrowRounded as PlayIcon,\n  Menu as ReorderIcon,\n} from \"@mui/icons-material/\";\nimport Box from \"@mui/material/Box\";\n\nimport CoverArt from \"../CoverArt\";\nimport withoutPropagation from \"../../utils/withoutPropagation\";\n\nclass PlaylistItemTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n  }\n\n  handleSelect() {\n    const commonProps = this.props.commonProps;\n    const item = this.props.item;\n    commonProps.onTrackSelect(commonProps.listOfID.indexOf(item.ID));\n  }\n\n  render() {\n    const { item, dragHandleProps, commonProps, itemSelected } = this.props;\n\n    return (\n      <Box\n        sx={{\n          maxHeight: \"100%\", // requirement for best results\n          // flex box\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          flexWrap: \"nowrap\",\n          // border\n          border: 1,\n          borderColor: \"divider\",\n          borderRadius: 1,\n          // paddding\n          boxSizing: \"border-box\",\n          padding: 0.5,\n          // elvate when selected\n          boxShadow: itemSelected > 0 ? 16 : 0,\n        }}\n      >\n        <Box\n          sx={{ display: \"flex\", flexGrow: 1, alignItems: \"center\" }}\n          onClick={withoutPropagation(this.handleSelect.bind(this))}\n        >\n          {/*render now playing icon or empty box matching icon size */}\n          {commonProps.currentTrackID === item.ID ? (\n            <PlayIcon />\n          ) : (\n            <Box sx={{ width: \"24px\", height: \"24px\" }} />\n          )}\n          <CoverArt\n            src={item.coverArt}\n            sx={{\n              height: \"48px\",\n              width: \"48px\",\n            }}\n          />\n\n          <Box sx={{ flexGrow: 1, mx: 1 }}>\n            <Box sx={{ typography: \"subtitl3\" }}>{item.title}</Box>\n            <Box sx={{ typography: \"subtitle2\" }}>{item.artist}</Box>\n          </Box>\n        </Box>\n        <ReorderIcon\n          sx={{ mx: 1 }}\n          {...dragHandleProps}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        />\n      </Box>\n    );\n  }\n}\n\nPlaylistItemTemplate.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default PlaylistItemTemplate;\n","import React from \"react\";\n\nimport Box from \"@mui/material/Box\";\n\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport ActionCreators from \"../../redux/actionCreators.js\";\n\nimport ReactDraggableList from \"react-draggable-list\";\n\nimport PlaylistItemTemplate from \"./PlaylistItemTemplate.js\";\n\nexport default function Playlist(props) {\n  const sx = props.sx;\n\n  const { playlist, currentTrack } = useSelector(\n    /** @type {import(\"../../redux/types.js\").useSelectCb} */\n    ({ playlist, currentTrack }) => ({\n      playlist,\n      currentTrack,\n    }),\n    shallowEqual\n  );\n\n  const dispatch = useDispatch();\n  const onReorder = (newList) =>\n    dispatch(ActionCreators.updatePlaylist(newList));\n  const onTrackSelect = (index) => {\n    // change and play track immediately\n    dispatch(ActionCreators.changeTrack(index));\n    dispatch(ActionCreators.play());\n  };\n\n  const draggablelistContainerRef = React.createRef();\n  return (\n    <Box\n      ref={draggablelistContainerRef}\n      sx={{\n        margin: (theme) => theme.spacing(),\n        // require set container with fix size for draggable list\n        width: \"10vw\",\n        height: \"10vh\",\n        ...sx, // should be able to overwrite default width and height\n      }}\n    >\n      <ReactDraggableList\n        list={playlist}\n        itemKey=\"ID\"\n        template={PlaylistItemTemplate}\n        onMoveEnd={onReorder}\n        container={() => draggablelistContainerRef.current}\n        commonProps={{\n          listOfID: playlist.map((element) => element.ID),\n          currentTrackID: playlist[currentTrack].ID,\n          onTrackSelect: onTrackSelect,\n        }}\n      />\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport actionCreators from \"../../redux/actionCreators.js\";\n\nimport {\n  ShuffleRounded,\n  ShuffleOnRounded,\n  QueueMusicRounded as PlaylistIcon,\n  RepeatRounded,\n  RepeatOnRounded,\n  RepeatOneOnRounded,\n} from \"@mui/icons-material/\";\nimport { Popover, Collapse, Box, ToggleButton } from \"@mui/material/\";\nimport styled from \"@mui/material/styles/styled\";\n\nimport Playlist from \"./Playlist.js\";\n\nimport { RepeatMode } from \"../../redux/types\";\n\nconst PREFIX = \"PlaylistControl\";\n\nconst classes = {\n  button: `${PREFIX}-button`,\n};\n\nconst RootBox = styled(Box)(() => ({\n  display: \"flex\",\n  flexDirection: \"column-reverse\",\n  alignItems: \"center\",\n}));\n\nconst BouttonContainer = styled(Box)(({ theme }) => ({\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"row\",\n\n  [`& .${classes.button}`]: {\n    // space buttons horizontally\n    margin: `auto ${theme.spacing(1)}`,\n    flexGrow: 1, // buttons should grow\n  },\n}));\n\nfunction RepeatButton(props) {\n  const { value, ...other } = props;\n\n  return (\n    <ToggleButton selected={value !== RepeatMode.NORMAL} {...other}>\n      {value === RepeatMode.NORMAL ? (\n        <RepeatRounded />\n      ) : value === RepeatMode.REPEAT_ALL ? (\n        <RepeatOnRounded />\n      ) : (\n        <RepeatOneOnRounded />\n      )}\n    </ToggleButton>\n  );\n}\n\nfunction ShuffleButton(props) {\n  const { value, ...other } = props;\n\n  return (\n    <ToggleButton selected={value} {...other}>\n      {value ? <ShuffleOnRounded /> : <ShuffleRounded />}\n    </ToggleButton>\n  );\n}\n\nexport default function PlaylistControl(props) {\n  const sx = props.sx;\n  const playlistViewMode = props.playlistViewMode;\n\n  const shuffled = useSelector(\n    /** @type {import(\"../../redux/types\").useSelectCb} */\n    (state) => state.shuffled\n  );\n  const repeatMode = useSelector(\n    /** @type {import(\"../../redux/types\").useSelectCb} */\n    (state) => state.repeatMode\n  );\n  const [playlistVisible, showPlaylist] = useState(false);\n  const [anchorEl, setAnchor] = useState(null);\n\n  const dispatch = useDispatch();\n  const onShuffle = (bool) => dispatch(actionCreators.shuffle(bool));\n  const onRepeat = () => dispatch(actionCreators.setRepeatMode());\n\n  const handlePopoverClose = () => {\n    showPlaylist(false);\n    setAnchor(null);\n  };\n\n  return (\n    <RootBox sx={{ ...sx }}>\n      <BouttonContainer>\n        <RepeatButton\n          value={repeatMode}\n          className={classes.button}\n          onClick={() => {\n            onRepeat();\n          }}\n        />\n        <ShuffleButton\n          value={shuffled}\n          className={classes.button}\n          onClick={() => {\n            onShuffle(!shuffled);\n          }}\n        />\n        <ToggleButton\n          className={classes.button}\n          value=\"show playlist\"\n          selected={playlistVisible}\n          onChange={(e) => {\n            setAnchor(\n              /** @type {Node} */ (e.target).parentElement.parentElement\n                .parentElement.parentElement\n            );\n            showPlaylist(!playlistVisible);\n          }}\n        >\n          <PlaylistIcon />\n        </ToggleButton>\n      </BouttonContainer>\n\n      {playlistViewMode === \"popover\" ? (\n        <Popover\n          open={Boolean(anchorEl)}\n          anchorEl={anchorEl}\n          onClose={handlePopoverClose}\n          sx={{ boxShadow: 8 }}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\",\n          }}\n          transformOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"right\",\n          }}\n        >\n          <Playlist\n            sx={{\n              width: \"400px\",\n              height: \"60vh\",\n            }}\n          />\n        </Popover>\n      ) : (\n        <Collapse collapsedSize={\"0\"} in={playlistVisible}>\n          <Playlist\n            sx={{\n              height: \"60vh\",\n              width: \"90vw\",\n            }}\n          />\n        </Collapse>\n      )}\n    </RootBox>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { useSelector, shallowEqual } from \"react-redux\";\n\nimport { useTheme, styled } from \"@mui/material/styles\";\nimport { Box, SwipeableDrawer, Paper } from \"@mui/material\";\n\nimport CoverArt from \"./CoverArt.js\";\nimport TrackDetails from \"./TrackDetials.js\";\nimport ProgressBar from \"./ProgressBar.js\";\nimport Controls from \"./Controls.js\";\nimport VolumeControl from \"./VolumeControl.js\";\nimport PlaylistControl from \"./Playlist/PlaylistControl.js\";\n\nconst PREFIX = \"Player\";\n\nconst RootPaper = styled(Paper)(({ theme }) => ({\n  width: \"100vw\",\n  // positioning\n  position: \"fixed\",\n  bottom: 0,\n  // prevent screen size overflow by making padding part of dimensions\n  boxSizing: \"border-box\",\n  borderRadius: `${theme.shape.borderRadius} ${theme.shape.borderRadius} 0 0`,\n  // only pad left and right; top padding too much\n  paddingRight: theme.spacing(1),\n  paddingLeft: theme.spacing(1),\n  // incase of overflow in undocked mode\n  overflow: \"hidden\",\n  transition: theme.transitions.create([\"all\"]),\n}));\n\nconst SwipeableDrawerRoot = styled(Box)(({ theme }) => ({\n  // fixed size root for swipeable\n  // width including padding\n  // boxSizing: \"border-box\",\n  height: \"80vh\",\n  marginTop: theme.spacing(6),\n  padding: theme.spacing(1),\n  overflow: \"hidden\",\n\n  // puller to be positioned middle of the parent's border\n  [`& > .${PREFIX}-swipeable-puller`]: {\n    width: 30,\n    height: theme.spacing(1),\n    backgroundColor: theme.palette.action.disabled, // button color\n    borderRadius: 3,\n    // position\n    position: \"absolute\",\n    top: theme.spacing(3), // center in parent border\n    left: \"calc(50% - 15px)\", // center horizontally\n  },\n}));\n\nconst RowBox = styled(Box)(() => ({\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  flexWrap: \"nowrap\",\n}));\n\nconst ColumnBox = styled(Box)(() => ({\n  // fill swipeable drawer root\n  width: \"100%\",\n  height: \"100%\",\n  // flexbox\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"end\",\n  alignItems: \"stretch\",\n  flexWrap: \"nowrap\",\n}));\n\n// box center child\nconst CenterChildBox = styled(Box)(() => ({\n  // flexbox\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  flexWrap: \"nowrap\",\n}));\n\n//create your forceUpdate hook\nfunction useForceUpdate() {\n  const [, setValue] = useState(0); // integer state\n  return () => setValue((value) => value + 1); // update the state to force render\n}\n\nexport default function Player(props) {\n  const sx = props.sx;\n  const disableDrawer = props.disableDrawer;\n\n  const theme = useTheme();\n\n  const [maximised, setMaximised] = useState(false);\n  const [isLarge, setLarge] = useState(false);\n  const forceUpdate = useForceUpdate();\n\n  const { currentTrack, playlist } = useSelector(\n    /** @type {import(\"../redux/types.js\").useSelectCb} */\n    ({ currentTrack, playlist }) => ({\n      currentTrack,\n      playlist,\n    }),\n    shallowEqual\n  );\n\n  const openSwipeableDrawer = () => {\n    // only maximise if docked and not large\n    if (!disableDrawer && !isLarge) {\n      setMaximised(true);\n    }\n  };\n\n  const closeSwipeableDrawer = () => {\n    // only close if its maximised\n    if (maximised) {\n      setMaximised(false);\n    }\n  };\n\n  const rowView = () => (\n    <RowBox onClick={openSwipeableDrawer}>\n      <CoverArt\n        src={playlist[currentTrack].coverArt}\n        sx={{\n          height: \"48px\",\n          width: \"48px\",\n          flexShrink: 0,\n        }}\n      />\n      <TrackDetails\n        sx={{\n          // fixed size to stop resize on content change\n          width: \"120px\",\n          // grow if screen is small to cover extra space\n          flexGrow: isLarge ? 0 : 1,\n          textAlign: \"left\",\n          margin: 1,\n          flexShrink: 0,\n        }}\n      />\n      <Controls size={isLarge ? \"large\" : \"small\"} />\n      {isLarge ? (\n        <>\n          <ProgressBar sx={{ flexGrow: 6 }} />\n          <VolumeControl sx={{ flexGrow: 2 }} />\n          <PlaylistControl playlistViewMode=\"popover\" />\n        </>\n      ) : null}\n    </RowBox>\n  );\n\n  const columnView = () => (\n    <ColumnBox>\n      {/* grow and center cover art */}\n      <CenterChildBox sx={{ flexGrow: 1 }}>\n        <CoverArt\n          className=\"children\"\n          src={playlist[currentTrack].coverArt}\n          sx={{\n            height: \"300px\",\n            width: \"300px\",\n            boxShadow: 4,\n          }}\n        />\n        <TrackDetails\n          sx={{\n            mt: 1,\n            textAlign: \"center\",\n          }}\n        />\n      </CenterChildBox>\n      <ProgressBar />\n      <Controls />\n      <VolumeControl />\n      <PlaylistControl playlistViewMode=\"expand\" />\n    </ColumnBox>\n  );\n\n  // set large depending on player width\n  const rootRef = React.useRef();\n  // eslint-disable-next-line\n  useEffect(() => {\n    /**\n     * Root of the player\n     * @type {Element}\n     * */\n    const rootElement = rootRef.current;\n    if (rootElement.clientWidth > theme.breakpoints.values.md) {\n      if (!isLarge) setLarge(true);\n    } else {\n      if (isLarge) {\n        setLarge(false);\n        // incase maximised before resize\n        if (maximised) setMaximised(false);\n      }\n    }\n  });\n\n  // also set window resize listener\n  useEffect(() => {\n    window.onresize = () => {\n      forceUpdate();\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    // sx from props can be used to override default styles in rowView\n    <RootPaper ref={rootRef} sx={sx} elevation={4}>\n      {/* render row view only when not maximised*/}\n      {maximised ? null : rowView()}\n\n      {!disableDrawer && !isLarge && (\n        <SwipeableDrawer\n          open={maximised}\n          anchor=\"bottom\"\n          onClose={closeSwipeableDrawer}\n          onOpen={openSwipeableDrawer}\n        >\n          <SwipeableDrawerRoot>\n            <Box\n              className={`${PREFIX}-swipeable-puller`}\n              onClick={closeSwipeableDrawer}\n            />\n            {columnView()}\n          </SwipeableDrawerRoot>\n        </SwipeableDrawer>\n      )}\n    </RootPaper>\n  );\n}\n","import { CustomNativeEventTypes } from \"./redux/types\";\n\n/**  @typedef {import(\"./redux/types\").Track} Track */\n/**\n * This sets new playlist and starts playing\n * @param {Track[]} playlist - Array of Tracks to play\n */\nfunction play(playlist) {\n  const event = new CustomEvent(CustomNativeEventTypes.PLAY, {\n    detail: playlist,\n  });\n  window.dispatchEvent(event);\n}\n\n/**\n * This inserts playlist right after current playing track\n * @param {Track[]} playlist - Array of Tracks to insert\n */\nfunction playNext(playlist) {\n  const event = new CustomEvent(CustomNativeEventTypes.PLAY_NEXT, {\n    detail: playlist,\n  });\n  window.dispatchEvent(event);\n}\n\n/**\n * This appends playlist to the end of current playlist\n * @param {Track[]} playlist - Array of Tracks to append\n */\nfunction playLater(playlist) {\n  const event = new CustomEvent(CustomNativeEventTypes.PLAY_LATER, {\n    detail: playlist,\n  });\n  window.dispatchEvent(event);\n}\n\nconst interfaceObject = {\n  play: play,\n  playNext: playNext,\n  playLater: playLater,\n};\n\nexport default interfaceObject;\n","import { combineReducers } from \"redux\";\n\nimport { RepeatMode, MediaState } from \"./types\";\nimport { Track, ActionTypes } from \"./types\";\n\nfunction mediaState(state = MediaState.STOPPED, action) {\n  switch (action.type) {\n    case ActionTypes.PLAY:\n      return MediaState.PLAYING;\n    case ActionTypes.PAUSE:\n      return MediaState.PAUSED;\n    case ActionTypes.STOP:\n      return MediaState.STOPPED;\n    default:\n      return state;\n  }\n}\n\nfunction playlist(state = [new Track(\"\", \"\", \"\", \"\", \"\")], action) {\n  if (action.type === ActionTypes.UPDATE_PLAYLIST)\n    return action.payload.playlist;\n  else return state;\n}\n\nfunction currentTrack(state = 0, action) {\n  if (action.type === ActionTypes.CHANGE_TRACK) return action.payload.index;\n  else return state;\n}\n\nfunction shuffled(state = false, action) {\n  if (action.type === ActionTypes.SHUFFLE) return action.payload.shuffle;\n  else return state;\n}\n\nfunction currentTime(state = 0, action) {\n  if (action.type === ActionTypes.SET_CURRENT_TIME)\n    return action.payload.currentTime;\n  else return state;\n}\n\nfunction timeLeft(state = 0, action) {\n  if (action.type === ActionTypes.SET_TIME_LEFT) return action.payload.timeLeft;\n  else return state;\n}\n\nfunction volume(state = 0, action) {\n  if (action.type === ActionTypes.CHANGE_VOLUME) return action.payload.volume;\n  else return state;\n}\n\nfunction repeatMode(state = RepeatMode.NORMAL, action) {\n  if (action.type !== ActionTypes.SET_REPEAT_MODE) return state;\n  switch (state) {\n    case RepeatMode.NORMAL:\n      return RepeatMode.REPEAT_ALL;\n    case RepeatMode.REPEAT_ALL:\n      return RepeatMode.REPEAT_ONE;\n    case RepeatMode.REPEAT_ONE:\n      return RepeatMode.NORMAL;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  mediaState,\n  playlist,\n  currentTrack,\n  shuffled,\n  currentTime,\n  timeLeft,\n  volume,\n  repeatMode,\n});\n","import actionCreators from \"../actionCreators.js\";\nimport { MediaState, RepeatMode } from \"../types\";\n\nimport { AudioOutput, ActionTypes } from \"../types\";\n\nconst audio = new AudioOutput();\n\nconst audioOutput = (store) => {\n  audio.addEventListener(\"timeupdate\", () => {\n    //set current time\n    store.dispatch(\n      actionCreators.setCurrentTime(Math.floor(audio.currentTime))\n    );\n\n    // set time left\n    store.dispatch(\n      actionCreators.setTimeLeft(\n        Math.floor(\n          isNaN(audio.duration) ? 0 : audio.duration - audio.currentTime\n        )\n      )\n    );\n  });\n\n  // set error listener\n  audio.addEventListener(\"error\", () => {\n    store.dispatch(actionCreators.stop());\n  });\n\n  // set canplay listener\n  audio.addEventListener(\"canplay\", () => {\n    let mediaState = store.getState().mediaState;\n    if (mediaState === MediaState.PLAYING)\n      audio.play().catch(() => store.dispatch(actionCreators.stop()));\n  });\n\n  // set \"on playback ended\" listener\n  audio.addEventListener(\"ended\", () => {\n    let state = store.getState();\n    let currentTrack = state.currentTrack;\n    let isLastTrack = currentTrack === state.playlist.length - 1;\n\n    switch (state.repeatMode) {\n      case RepeatMode.REPEAT_ALL:\n        if (isLastTrack) store.dispatch(actionCreators.changeTrack(0));\n        else store.dispatch(actionCreators.changeTrack(++currentTrack));\n        break;\n      case RepeatMode.REPEAT_ONE:\n        audio.play(); // play again\n        break;\n      case RepeatMode.NORMAL:\n      default:\n        if (isLastTrack) store.dispatch(actionCreators.stop());\n        else store.dispatch(actionCreators.changeTrack(++currentTrack));\n    }\n  });\n\n  // set default volume level\n  audio.volume = store.getState().volume / 100;\n\n  return (next) => (action) => {\n    let state = store.getState();\n\n    switch (action.type) {\n      case ActionTypes.CHANGE_TRACK:\n        let nexTrack = state.playlist[action.payload.index];\n        audio.setSrc(nexTrack);\n        break;\n\n      case ActionTypes.PLAY:\n        audio.setSrc(state.playlist[state.currentTrack]);\n        audio.play().catch(() => store.dispatch(actionCreators.stop()));\n        break;\n\n      case ActionTypes.PAUSE:\n        audio.pause();\n        break;\n\n      case ActionTypes.STOP:\n        audio.clear();\n        break;\n\n      case ActionTypes.SEEK:\n        audio.currentTime = action.payload.time;\n        break;\n\n      case ActionTypes.CHANGE_VOLUME:\n        audio.volume = action.payload.volume / 100;\n        break;\n\n      case ActionTypes.SKIP_PREV:\n        if (audio.currentTime > 3) {\n          store.dispatch(actionCreators.seek(0));\n          return; // drop the action\n        }\n        break;\n      default:\n        break;\n    }\n\n    return next(action);\n  };\n};\n\nexport default audioOutput;\n","import { ActionTypes } from \"../types\";\nimport actionCreators from \"../actionCreators.js\";\n\nimport shuffle from \"../../utils/shuffle.js\";\n\nconst shuffler = (store) => (next) => (action) => {\n  let state = store.getState();\n\n  if (\n    action.type === ActionTypes.SHUFFLE &&\n    state.shuffled !== action.payload.shuffle\n  ) {\n    let playlist = state.playlist;\n    let currentIndex = state.currentTrack;\n    let currentTrack = playlist[state.currentTrack]; // current track\n    let upper = playlist.slice(0, currentIndex);\n    let lower = playlist.slice(currentIndex + 1, playlist.lenth);\n\n    let withoutCurrent = upper.concat(lower);\n\n    withoutCurrent = action.payload.shuffle\n      ? shuffle(withoutCurrent)\n      : withoutCurrent.sort((first, second) => first.ID < second.ID);\n\n    // update playlist with current track on top\n    store.dispatch(\n      actionCreators.updatePlaylist([currentTrack, ...withoutCurrent])\n    );\n    store.dispatch(actionCreators.changeTrack(0));\n  }\n\n  return next(action);\n};\n\nexport default shuffler;\n","export default function shuffle(array) {\n  let newArray = array.slice();\n\n  for (let i = 0; i < Math.ceil(array.length / 2); i++) {\n    let randIndex1 = Math.round(Math.random() * (array.length - 1));\n    let randIndex2 = Math.round(Math.random() * (array.length - 1));\n\n    let temp = newArray[randIndex1];\n    newArray[randIndex1] = newArray[randIndex2];\n    newArray[randIndex2] = temp;\n  }\n\n  return newArray;\n}\n","import { RepeatMode, ActionTypes } from \"../types.js\";\n\nconst changeTrackHelper = (store) => {\n  return (next) => (action) => {\n    let state = store.getState();\n\n    // chacke index out of bound\n    if (\n      action.type === ActionTypes.CHANGE_TRACK &&\n      (action.payload.index >= state.playlist.length ||\n        action.payload.index < 0)\n    ) {\n      // set to 0 if repeat all\n      if (state.repeatMode === RepeatMode.REPEAT_ALL) action.payload.index = 0;\n      else return; // else stop the action\n    }\n\n    return next(action);\n  };\n};\n\nexport default changeTrackHelper;\n","import actionCreators from \"../actionCreators.js\";\nimport { ActionTypes } from \"../types\";\n\nconst updatePlaylistHelper = (store) => {\n  return (next) => (action) => {\n    if (action.type !== ActionTypes.UPDATE_PLAYLIST) return next(action);\n\n    // store prev playlist and new playlist\n    const { playlist, currentTrack } = store.getState();\n    const newPlaylist = action.payload.playlist;\n\n    // update state with new playlist\n    const result = next(action);\n\n    // check if playlist changed\n    let playlistChanged = false;\n    if (newPlaylist.length !== playlist.length) playlistChanged = true;\n    else\n      for (let i = 0; i < playlist.length; i++) {\n        if (newPlaylist[i].ID !== playlist[i].ID) {\n          playlistChanged = true;\n          break;\n        }\n      }\n\n    // if playlist changed look for current track\n    if (playlistChanged) {\n      let newCurrentTrack = -1;\n      for (let i = 0; i < newPlaylist.length; i++) {\n        if (newPlaylist[i].ID === playlist[currentTrack].ID) {\n          newCurrentTrack = i;\n          break;\n        }\n      }\n\n      // if not found then its completely playlist, update current track to 0\n      if (newCurrentTrack === -1) store.dispatch(actionCreators.changeTrack(0));\n      else store.dispatch(actionCreators.changeTrack(newCurrentTrack)); // else update current track\n    }\n\n    return result;\n  };\n};\n\nexport default updatePlaylistHelper;\n","import actionCreator from \"../actionCreators\";\n\nconst mediaSessionActions = (store) => {\n  navigator.mediaSession.setActionHandler(\"play\", () =>\n    store.dispatch(actionCreator.play())\n  );\n\n  navigator.mediaSession.setActionHandler(\"pause\", () =>\n    store.dispatch(actionCreator.pause())\n  );\n\n  navigator.mediaSession.setActionHandler(\"nexttrack\", () =>\n    store.dispatch(actionCreator.skipNext())\n  );\n\n  navigator.mediaSession.setActionHandler(\"previoustrack\", () =>\n    store.dispatch(actionCreator.skipPrev())\n  );\n\n  return (next) => (action) => next(action);\n};\n\nexport default mediaSessionActions;\n","import ActionCreators from \"../actionCreators.js\";\nimport { ActionTypes } from \"../types.js\";\n\nconst skipHelper = (store) => {\n  return (next) => (action) => {\n    let currentTrack = store.getState().currentTrack;\n\n    if (action.type === ActionTypes.SKIP_NEXT)\n      store.dispatch(ActionCreators.changeTrack(currentTrack + 1));\n    else if (action.type === ActionTypes.SKIP_PREV)\n      store.dispatch(ActionCreators.changeTrack(currentTrack - 1));\n\n    return next(action);\n  };\n};\n\nexport default skipHelper;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./reducers\";\n\nimport audioOutput from \"./middleware/audioOutput.js\";\nimport shuffler from \"./middleware/shuffler.js\";\nimport eventHandler from \"./middleware/events.js\";\nimport changeTrackHelper from \"./middleware/changeTrackHelper\";\nimport updatePlaylistHelper from \"./middleware/updatePlaylistHelper\";\nimport mediaSessionActions from \"./middleware/mediaSessionActions\";\nimport skipHelper from \"./middleware/skipHelper\";\n\nimport { MediaState, RepeatMode } from \"./types\";\nimport { Track } from \"./types\";\n\nexport default configureStore({\n  reducer: rootReducer,\n  middleware: [\n    eventHandler,\n    shuffler,\n    updatePlaylistHelper,\n    mediaSessionActions,\n    changeTrackHelper,\n    audioOutput, // audio output might drop skip action\n    skipHelper, // skip helper must come after audioOutput\n  ],\n  preloadedState: {\n    mediaState: MediaState.STOPPED,\n    currentTrack: 0,\n    shuffled: false,\n    playlist: [new Track(\"\", \"\", \"\", \"\", \"\")], // single default empty track\n    volume: 25,\n    repeatMode: RepeatMode.NORMAL,\n  },\n});\n","import { Track } from \"../types\";\nimport actionCreators from \"../actionCreators.js\";\nimport { CustomNativeEventTypes } from \"../types\";\n\nexport default function eventHandler(store) {\n  window.addEventListener(CustomNativeEventTypes.PLAY, function (e) {\n    let playlist = /**@type {CustomEvent}*/ (e).detail;\n\n    if (playlist.length < 1) playlist.push(new Track(\"\", \"\", \"\", \"\", \"\"));\n\n    // eplicitly stop and insert new playlist\n    store.dispatch(actionCreators.stop());\n    store.dispatch(actionCreators.changeTrack(0));\n    store.dispatch(actionCreators.updatePlaylist(playlist));\n    store.dispatch(actionCreators.play());\n  });\n\n  let playNextAfterHandler = (e) => {\n    let currentPlaylist = store.getState().playlist;\n    let currentTrack = store.getState().currentTrack;\n\n    let newPlaylist = [];\n\n    if (e.type === CustomNativeEventTypes.PLAY_NEXT)\n      newPlaylist = currentPlaylist.reduce(\n        (accumulator, currentValue, index) => {\n          if (index === currentTrack)\n            return [...accumulator, currentValue, ...e.detail];\n          else return [...accumulator, currentValue];\n        },\n        []\n      );\n    else if (e.type === CustomNativeEventTypes.PLAY_LATER) {\n      newPlaylist = currentPlaylist.concat(e.detail);\n    }\n\n    store.dispatch(actionCreators.updatePlaylist(newPlaylist));\n  };\n\n  window.addEventListener(\n    CustomNativeEventTypes.PLAY_NEXT,\n    playNextAfterHandler\n  );\n\n  window.addEventListener(\n    CustomNativeEventTypes.PLAY_LATER,\n    playNextAfterHandler\n  );\n\n  return (next) => (action) => {\n    return next(action);\n  };\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport PlayerRoot from \"./components/Player.js\";\nimport { Track } from \"./redux/types.js\";\nimport PlayerInterface from \"./interface.js\";\nimport store from \"./redux/store.js\";\n\n/**\n * @typedef {object} PlayerProps\n * @prop {object} [sx={ width: \"100vw\", position: \"fixed\", bottom: 0, boxSizing: \"border-box\", borderRadius: `${theme.shape.borderRadius} ${theme.shape.borderRadius} 0 0`, paddingRight: theme.spacing(1), paddingLeft: theme.spacing(1), overflow: \"hidden\", transition: theme.transitions.create([\"all\"])}]\n *  - This is a superset of CSS introduced with muiv5. You can override the default styles using this prop. It is possible to nest pseudo-selectors and target children components too(:hover, & > \\*, etc).\n * @prop {boolean} [disableDrawer=false] - Mobile drawer is activated when player is too small to contain all the controls. It is likely you would want this feature disabled if you render the Player in the normal document flow or want to use Player as widget in your app.\n */\n\n/**\n * The Player component\n * @param {PlayerProps} [props]\n */\nfunction Player(props) {\n  return (\n    <Provider store={store}>\n      <PlayerRoot {...props} />\n    </Provider>\n  );\n}\n\nexport default Player;\n\n/**@deprecated use \"Track\"\" instead*/\nconst TrackModel = Track;\nexport { Track, TrackModel, PlayerInterface };\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport ThemeProvider from \"@mui/material/styles/ThemeProvider\";\nimport {\n  Box,\n  ToggleButtonGroup,\n  ToggleButton,\n  useMediaQuery,\n  TextField,\n  Link,\n} from \"@mui/material\";\nimport {\n  LightModeRounded,\n  ComputerRounded,\n  DarkModeRounded,\n} from \"@mui/icons-material\";\n\n// To use the player this is what you need to import\nimport Player, { TrackModel, PlayerInterface } from \"./module/index.js\";\n\nimport makeTheme from \"./makeTheme\";\n\nfunction App() {\n  const [mode, setMode] = React.useState(\"system\");\n  const isDark = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = makeTheme(\n    mode === \"system\" ? (isDark ? \"dark\" : \"light\") : mode\n  );\n\n  const [\n    {\n      width,\n      position,\n      bottom,\n      boxShadow,\n      borderRadiusTL,\n      borderRadiusTR,\n      borderRadiusBL,\n      borderRadiusBR,\n    },\n    setSx,\n  ] = React.useState({\n    width: \"100vw\",\n    position: \"fixed\",\n    bottom: 0,\n    boxShadow: 8,\n    borderRadiusTL: 1,\n    borderRadiusTR: 1,\n    borderRadiusBL: 0,\n    borderRadiusBR: 0,\n  });\n\n  const handleForm = (e) => {\n    const id = e.target.id;\n    const value = e.target.value;\n\n    setSx({\n      width,\n      position,\n      bottom,\n      boxShadow,\n      borderRadiusTL,\n      borderRadiusTR,\n      borderRadiusBL,\n      borderRadiusBR,\n      [`${id}`]: value,\n    });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box\n        sx={{\n          width: \"100vw\",\n          height: \"100vh\",\n          bgcolor: \"background.paper\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          color: \"text.primary\",\n          textAlign: \"center\",\n        }}\n      >\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Box sx={{ typography: \"h6\" }}>react-material-music-player</Box>\n\n        <div>\n          <Link\n            href=\"https://www.npmjs.com/package/react-material-music-player\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            npm\n          </Link>\n          <br />\n          <Link\n            href=\"https://github.com/the-maazu/react-material-music-player\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            github\n          </Link>\n        </div>\n\n        <Box sx={{ typography: \"body3\", margin: 2 }}>\n          Resize window to eneter mobile mode. <br />\n          Swipe up or tap player to expand in mobile mode\n        </Box>\n\n        <ToggleButtonGroup\n          value={mode}\n          exclusive={true}\n          onChange={(e, value) => {\n            if (value) setMode(value);\n          }}\n        >\n          <ToggleButton value={\"light\"}>\n            <LightModeRounded />\n          </ToggleButton>\n          <ToggleButton value={\"system\"}>\n            <ComputerRounded />\n          </ToggleButton>\n          <ToggleButton value={\"dark\"}>\n            <DarkModeRounded />\n          </ToggleButton>\n        </ToggleButtonGroup>\n\n        <Box sx={{ display: \"flex\", margin: 2 }}>\n          <Box sx={{ margin: 1 }}>\n            <TextField\n              sx={{ display: \"block\" }}\n              margin={\"dense\"}\n              size=\"small\"\n              id=\"width\"\n              label=\"width\"\n              value={width}\n              onChange={handleForm}\n            />\n            <TextField\n              sx={{ display: \"block\" }}\n              margin={\"dense\"}\n              size=\"small\"\n              id=\"position\"\n              label=\"position\"\n              value={position}\n              onChange={handleForm}\n              type=\"text\"\n            />\n            <TextField\n              sx={{ display: \"block\" }}\n              margin={\"dense\"}\n              size=\"small\"\n              id=\"bottom\"\n              label=\"bottom\"\n              value={bottom}\n              onChange={handleForm}\n              type=\"text\"\n            />\n            <TextField\n              sx={{ display: \"block\" }}\n              margin={\"dense\"}\n              size=\"small\"\n              id=\"boxShadow\"\n              label=\"boxShadow\"\n              value={boxShadow}\n              onChange={handleForm}\n              type=\"number\"\n            />\n          </Box>\n\n          <Box sx={{ margin: 1 }}>\n            <TextField\n              sx={{ display: \"block\" }}\n              margin={\"dense\"}\n              size=\"small\"\n              id=\"borderRadiusTL\"\n              label=\"borderRadiusTL\"\n              value={borderRadiusTL}\n              onChange={handleForm}\n              type=\"number\"\n            />\n            <TextField\n              sx={{ display: \"block\" }}\n              margin={\"dense\"}\n              size=\"small\"\n              id=\"borderRadiusTR\"\n              label=\"borderRadiusTR\"\n              value={borderRadiusTR}\n              onChange={handleForm}\n              type=\"number\"\n            />\n            <TextField\n              sx={{ display: \"block\" }}\n              margin={\"dense\"}\n              size=\"small\"\n              id=\"borderRadiusBL\"\n              label=\"borderRadiusBL\"\n              value={borderRadiusBL}\n              onChange={handleForm}\n              type=\"number\"\n            />\n            <TextField\n              sx={{ display: \"block\" }}\n              margin={\"dense\"}\n              size=\"small\"\n              id=\"borderRadiusBR\"\n              label=\"borderRadiusBR\"\n              value={borderRadiusBR}\n              onChange={handleForm}\n              type=\"number\"\n            />\n          </Box>\n        </Box>\n\n        <Player\n          // disableDrawer\n          sx={{\n            width: width,\n            position: position,\n            bottom: bottom,\n            boxShadow: boxShadow,\n            borderRadius: `${borderRadiusTL}px ${borderRadiusTR}px ${borderRadiusBL}px ${borderRadiusBR}px`,\n          }}\n        />\n      </Box>\n    </ThemeProvider>\n  );\n}\n\n// get media data over tthe internet\nconst TEST_MEDIA =\n  \"https://raw.githubusercontent.com/the-maazu/react-material-music-player/master/sample_media/\";\n\n// update playlist with test data and start play\nPlayerInterface.play([\n  new TrackModel(\n    \"1\",\n    TEST_MEDIA + \"bach.jpg\",\n    \"68 Choral\",\n    \"Bach\",\n    TEST_MEDIA + \"Bach%20--%20BWV%20245%20--%2068%20Choral.mp3\"\n  ),\n]);\n\n// wait 3 seconds\nwindow.setTimeout(\n  () =>\n    // adds music at end of playlist\n    PlayerInterface.playLater([\n      new TrackModel(\n        \"2\",\n        TEST_MEDIA + \"emerson.jpeg\",\n        \"All through the night\",\n        \"Emerson\",\n        TEST_MEDIA +\n          \"Emerson%20--%20All%20through%20the%20Night%20(Ar%20Hyd%20y%20Nos).mp3\"\n      ),\n    ]),\n  3000 // 3 seconds\n);\n\n// wait 6 seconds\nwindow.setTimeout(\n  () =>\n    // add music after current track\n    PlayerInterface.playNext([\n      new TrackModel(\n        \"3\",\n        TEST_MEDIA + \"guido.jpg\",\n        \"Ut queant laxis\",\n        \"Guido von Arezzo\",\n        TEST_MEDIA + \"Guido%20von%20Arezzo%20--%20Ut%20queant%20laxis.mp3\"\n      ),\n    ]),\n  6000 // 6 seconds\n);\n\nexport default App;\n","import { createTheme, alpha } from \"@mui/material/styles\";\nimport { deepmerge } from \"@mui/utils\";\n\nexport default function getTheme(mode) {\n  // define light palette for light mode\n  const lightPalette = {\n    primary: { main: \"#007FFF\" },\n    secondary: { main: \"#9c27b0\" },\n    divider: \"#E5E8EC\",\n    action: {\n      active: \"rgba(0, 0, 0, 0.54)\",\n      hover: \"rgba(0, 0, 0, 0.04)\",\n      hoverOpacity: 0.04,\n      selected: \"rgba(0, 0, 0, 0.08)\",\n      selectedOpacity: 0.08,\n    },\n    text: {\n      disabled: \"rgba(0, 0, 0, 0.38)\",\n      icon: \"rgba(255, 255, 255, 0.5)\",\n      primary: \"#20262D\",\n      secondary: \"#2F3A45\",\n    },\n  };\n\n  // define light palette for dark mode\n  let darkPalette = {\n    primary: { main: \"#5090D3\" },\n    secondary: { main: \"#ce93d8\" },\n    background: {\n      paper: \"#0A1929\",\n    },\n    action: {\n      active: \"#fff\",\n      hover: \"rgba(255, 255, 255, 0.08)\",\n      hoverOpacity: 0.08,\n      selected: \"rgba(255, 255, 255, 0.16)\",\n      selectedOpacity: 0.16,\n    },\n    text: {\n      disabled: \"rgba(255, 255, 255, 0.5)\",\n      icon: \"rgba(255, 255, 255, 0.5)\",\n      primary: \"#fff\",\n      secondary: \"#AAB4BE\",\n    },\n  };\n\n  // create a new theme with right palette based on mode\n  // this theme object can then be referenced when overriding components\n  let theme = createTheme({\n    palette: {\n      mode,\n      ...(mode === \"light\" ? lightPalette : darkPalette),\n    },\n  });\n\n  // create component overrieds for dark mode\n  let darkComponents = {\n    MuiSlider: {\n      styleOverrides: {\n        // some csss\n        root: {\n          color: \"white\",\n        },\n        thumb: {\n          color: \"white\",\n          width: 8,\n          height: 8,\n          transition: \"0.3s cubic-bezier(.47,1.64,.41,.8)\",\n        },\n      },\n    },\n  };\n\n  // create components overrides for light mode\n  let lightComponents = {\n    MuiIconButton: {\n      defaultProps: {\n        color: \"primary\",\n      },\n    },\n\n    MuiSlider: {\n      styleOverrides: {\n        root: {\n          color: \"black\",\n        },\n        thumb: {\n          color: \"gray\",\n        },\n      },\n    },\n  };\n\n  // create common components overrides for both modes\n  let commonStyleOverrides = {\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          borderRadius: \"10px 10px 0 0\",\n          // make background transparent by reapplying theme background paper\n          // alpha is a convinience function for generating css color string with alpha channel\n          backgroundColor: alpha(theme.palette.background.paper, 0.8),\n          backdropFilter: \"blur(40px)\",\n        },\n      },\n    },\n    MuiToggleButton: {\n      defaultProps: {\n        color: \"primary\",\n      },\n    },\n\n    MuiSlider: {\n      styleOverrides: {\n        thumb: {\n          width: 8,\n          height: 8,\n          transition: \"0.3s cubic-bezier(.47,1.64,.41,.8)\",\n          \"&:before\": {\n            boxShadow: \"0 2px 1px 0 rgba(0,0,0,0.4)\",\n          },\n          \":hover, &.Mui-focusVisible\": {\n            height: 15,\n            width: 15,\n            boxShadow: \"0px 0px 0px 8px rgb(0 0 0 / 16%)\",\n          },\n          \"&.Mui-active\": {\n            width: 20,\n            height: 20,\n          },\n        },\n      },\n    },\n  };\n\n  // deepmerge common styles overrides with light or dark components overrides depending on mode\n  let mergedComponentStyles =\n    mode === \"light\"\n      ? deepmerge(\n          { components: commonStyleOverrides },\n          { components: lightComponents }\n        )\n      : deepmerge(\n          { components: commonStyleOverrides },\n          { components: darkComponents }\n        );\n\n  // create\n  return createTheme(theme, mergedComponentStyles);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}